

----STARTUP---- (16 May 2022 19:32:14) as /home/clinux01/Documentos/6/linux64/CuisUniversity-5096.image!


----End fileIn of /home/clinux01/Descargas/2022-1c-main/05-Portfolio 1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:03:21'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:03:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:03:21'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:06:42' prior: 50474306!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [(aTransaction value) * (-1) ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:06:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:06:44'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:06:44'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:06:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:06:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:06:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:06:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:06:51'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:07:48' prior: 50474350!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [(aTransaction value) * (-1) ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:07:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:07:51'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:07:51'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:07:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:07:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:07:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:07:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:07:52'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:08:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:08:49' prior: 50474390!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [^aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [^(aTransaction value) * (-1) ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:08:49'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:08:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:08:49'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:09:42' prior: 50474434!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [(aTransaction value) * (-1) ] ] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:09:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:09:44'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:09:44'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:09:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:09:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:09:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:09:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:09:47'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:09:55'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:11:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:11:49'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:11:49'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:11:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:11:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:11:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:11:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:11:51'!
FAILURE!

transactions!

a Deposit!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:13:10' prior: 50474474!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction value].
		(aTransaction isKindOf: Withdraw) ifTrue: [(aTransaction value) * (-1) ]. 
		] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:13:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:13:43'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:13:43'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:13:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:13:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:13:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:13:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:13:44'!
FAILURE!

aTransaction!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:15:09' prior: 50474549!
balance

	^transactions sum: [ :aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [aTransaction value]
		ifFalse: [(aTransaction value) * (-1) ]. 
		] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:15:12'!
PASSED!
!Deposit methodsFor: 'value' stamp: 'JDR 5/16/2022 20:16:56'!
valueForBalance

	^ value! !
!Withdraw methodsFor: 'value' stamp: 'JDR 5/16/2022 20:17:12'!
valueForBalance

	^ value * (-1)! !
!Withdraw methodsFor: 'value' stamp: 'JDR 5/16/2022 20:17:30' prior: 50474631!
valueForBalance

	^ self value * (-1)! !
!Deposit methodsFor: 'value' stamp: 'JDR 5/16/2022 20:17:39' prior: 50474628!
valueForBalance

	^ self value! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:18:06' prior: 50474590!
balance

	^transactions sum: [ :aTransaction | aTransaction valueForBalance 
		] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:18:09' prior: 50474643!
balance

	^transactions sum: [ :aTransaction | aTransaction valueForBalance	] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:18:10'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:26:18' prior: 50474649!
balance

	| total |
	total _ 0.
	transactions do: [ :aTransaction | total _ aTransaction fff: total 	].
	
	^total! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:26:25'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:26:25'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:26:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:26:27'!
ERROR!
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:26:38'!
fff: aSmallInteger 
	self shouldBeImplemented.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:40:04' prior: 50474719!
fff: aSmallInteger 
	
	^aSmallInteger + self value! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:10'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:10'!
ERROR!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:40:23'!
fff: aSmallInteger 
	self shouldBeImplemented.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:40:42' prior: 50474763!
fff: aSmallInteger 
	
	^aSmallInteger - self value! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:40:48'!
PASSED!
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:44:56' prior: 50474724!
fff: aSmallInteger 
	
	^aSmallInteger + self value! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:45:09'!
incorporateTo: aSmallInteger 
	
	^aSmallInteger + self value! !

!methodRemoval: Deposit #fff: stamp: 'JDR 5/16/2022 20:45:09'!
fff: aSmallInteger 
	
	^aSmallInteger + self value!
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:45:20' prior: 50474808!
incorporateTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated + self value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:45:36'!
incorporateTo: aSmallInteger 
	
	^aSmallInteger - self value! !

!methodRemoval: Withdraw #fff: stamp: 'JDR 5/16/2022 20:45:36'!
fff: aSmallInteger 
	
	^aSmallInteger - self value!
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:45:44' prior: 50474823!
incorporateTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated - self value! !
!AccountTransaction methodsFor: 'value' stamp: 'JDR 5/16/2022 20:45:54'!
incorporateTo: aBalanceBeingCalculated 

	self subclassResponsibility ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:46:03'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:46:03'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:46:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:46:03'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:46:31' prior: 50474682!
balance

	| total |
	total _ 0.
	transactions do: [ :aTransaction | total _ aTransaction incorporateTo: total 	].
	
	^total! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:46:31'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:46:54' prior: 50474869!
balance

	| balance |
	balance _ 0.
	transactions do: [ :aTransaction | balance _ aTransaction incorporateTo: balance 	].
	
	^balance! !
!AccountTransaction methodsFor: 'value' stamp: 'JDR 5/16/2022 20:50:00'!
addTo: aBalanceBeingCalculated 

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #incorporateTo: stamp: 'JDR 5/16/2022 20:50:00'!
incorporateTo: aBalanceBeingCalculated 

	self subclassResponsibility !
!AccountTransaction methodsFor: 'value' stamp: 'JDR 5/16/2022 20:50:16'!
incorporateTo: aBalanceBeingCalculated 

	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #addTo: stamp: 'JDR 5/16/2022 20:50:16'!
addTo: aBalanceBeingCalculated 

	self subclassResponsibility !
!AccountTransaction methodsFor: 'value' stamp: 'JDR 5/16/2022 20:50:27'!
addTo: aBalanceBeingCalculated 

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:50:27' overrides: 50474929!
addTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated + self value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:50:27' overrides: 50474929!
addTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated - self value! !

!methodRemoval: AccountTransaction #incorporateTo: stamp: 'JDR 5/16/2022 20:50:27'!
incorporateTo: aBalanceBeingCalculated 

	self subclassResponsibility !

!methodRemoval: Deposit #incorporateTo: stamp: 'JDR 5/16/2022 20:50:27'!
incorporateTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated + self value!

!methodRemoval: Withdraw #incorporateTo: stamp: 'JDR 5/16/2022 20:50:27'!
incorporateTo: aBalanceBeingCalculated 
	
	^aBalanceBeingCalculated - self value!

!methodRemoval: Withdraw #valueForBalance stamp: 'JDR 5/16/2022 20:50:37'!
valueForBalance

	^ self value * (-1)!

!methodRemoval: Deposit #valueForBalance stamp: 'JDR 5/16/2022 20:50:39'!
valueForBalance

	^ self value!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JDR 5/16/2022 20:50:46' prior: 50474903!
balance

	| balance |
	balance _ 0.
	transactions do: [ :aTransaction | balance _ aTransaction addTo: balance 	].
	
	^balance! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:50:46'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 20:56:08'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 20:56:18'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'no messages' stamp: 'JDR 5/16/2022 20:58:07'!
test01

	| portfolio |
	portfolio _ Portfolio new.
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:58:36' prior: 50475025!
test01

	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:58:41'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:58:41'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:58:45'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:58:45'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:58:51'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:59:00' prior: 50475045!
balance
	
	^0! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:59:07'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:59:11'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 20:59:42' prior: 50475030!
test01

	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 20:59:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:00:13'!
test02

	| portfolio accountTransaction |
	portfolio _ Portfolio new.
	accountTransaction _ AccountTransaction new.
	
	self assert: 0 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:01:35' prior: 50475096!
test02

	| portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: 0 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:01:48' prior: 50475105!
test02

	| portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:01:48'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:03:03' prior: 50475114!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio xx: account.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:13:34' prior: 50475126!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 21:16:08'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:16:06'!
addAccount: anAccount

	account _ anAccount

	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:17:23' prior: 50475050!
balance
	
	^account balance ! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:17:38'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:17:38'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:17:38'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:17:38'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:18:09'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:18:13'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:18:13'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:18:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:19:38' prior: 50475158!
balance
	
	account ifNil: [^0].
	
	^account balance ! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:19:43'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:19:43'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:23:21' prior: 50475136!
test02

	| portfolio account portfolioToAdd |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:23:28'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:23:39'!
test03

	| portfolio account portfolioToAdd |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:01:48' prior: 50475191!
test02

	| portfolio account |
	portfolio _ Portfolio new.
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:13:34' prior: 50475219!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:24:21'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 21:24:21'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:24:21'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:24:25'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 21:24:53'!
Object subclass: #Portfolio
	instanceVariableNames: 'account portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:24:50' prior: 50475276!
addPortfolio: aPortfolio 
	
	portfolio _ aPortfolio! !

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:24:55'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:27:50' prior: 50475181!
balance
	
	| balance |
	balance _ 0.
	account ifNotNil: [balance _ account balance + balance].
	portfolio ifNotNil: [balance _ portfolio balance + balance].
	
	^account balance ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:28:00' prior: 50475297!
balance
	
	| balance |
	
	balance _ 0.
	
	account ifNotNil: [balance _ account balance + balance].
	portfolio ifNotNil: [balance _ portfolio balance + balance].
	
	^account balance ! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:28:00'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:28:00'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:28:00'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:28:03'!
ERROR!

account == nil!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:32:20'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:32:52' prior: 50475306!
balance
	
	| balance |
	
	balance _ 0.
	
	account ifNotNil: [balance _ account balance + balance].
	portfolio ifNotNil: [balance _ portfolio balance + balance].
	
	^balance! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:32:53'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:32:54'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:32:54'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:32:54'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:32:54'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:35:14'!
test04

	| portfolio account1 account2 |
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	
	self assert: 125 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:35:20'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:36:58' overrides: 16920235!
initialize

	account _ OrderedCollection new.
	! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:37:03'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:37:04'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:37:04'!
ERROR!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:37:04'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:37:25' prior: 50475153!
addAccount: anAccount

	account add: anAccount

	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 21:37:42'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:37:42' prior: 50475379!
addAccount: anAccount

	accounts add: anAccount

	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:37:42' prior: 50475365 overrides: 16920235!
initialize

	accounts _ OrderedCollection new.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:37:42' prior: 50475327!
balance
	
	| balance |
	
	balance _ 0.
	
	accounts ifNotNil: [balance _ accounts balance + balance].
	portfolio ifNotNil: [balance _ portfolio balance + balance].
	
	^balance! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:37:46'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:37:46'!
ERROR!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:37:46'!
ERROR!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:37:46'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:38:44' prior: 50475403!
balance
	
	| balance |
	
	balance _ 0.
	
	
	portfolio ifNotNil: [balance _ portfolio balance + balance].
	
	accounts do: [:account | balance _ account balance + balance].
	
	^balance! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:38:46'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:38:46'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:38:46'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:38:46'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:42:10'!
test05

	| portfolio account1 account2 portfolioToAdd1 portfolioToAdd2 |
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1.	
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	
	portfolioToAdd1 _ Portfolio new.
	portfolioToAdd1 addAccount: account1.
	
	portfolioToAdd2 _ Portfolio new.
	portfolioToAdd2 addAccount: account2.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd1.
	portfolio addPortfolio: portfolioToAdd2.
	
	self assert: 150 equals: portfolio balance
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:42:51' prior: 50475398 overrides: 16920235!
initialize

	accounts _ OrderedCollection new.
	portfolio _ OrderedCollection new.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:43:02' prior: 50475289!
addPortfolio: aPortfolio 
	
	portfolio add: aPortfolio! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/16/2022 21:43:12'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:43:12' prior: 50475421!
balance
	
	| balance |
	
	balance _ 0.
	
	
	portfolios ifNotNil: [balance _ portfolios balance + balance].
	
	accounts do: [:account | balance _ account balance + balance].
	
	^balance! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:43:12' prior: 50475461 overrides: 16920235!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:43:12' prior: 50475467!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:43:58' prior: 50475480!
balance
	
	| balance |
	
	balance _ 0.

	accounts do: [:account | balance _ account balance + balance].
	portfolios do: [:portfolio | balance _ portfolio balance + balance].
	
	^balance! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:44:01'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:44:01'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:44:01'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:44:01'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:44:01'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:49:43'!
test06

	| portfolio |
	portfolio _ Portfolio new.
	
	self assert: portfolio transactions isEmpty
	
! !

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:49:52'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:49:58'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:50:13' prior: 50475531!
transactions
	
	^OrderedCollection new.! !

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:50:14'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:51:37'!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.
	account register: Deposit on: account. 
	
	portfolio _ Portfolio new.
	
	self assert: portfolio transactions isEmpty
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:53:41' prior: 50475557!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: account equals: portfolio transactions first 
	
! !

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:53:41'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:55:55' prior: 50475536!
transactions
	
	^accounts first transactions.! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:55:56'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:55:56'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:55:56'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:55:56'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:55:56'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:55:56'!
ERROR!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:55:56'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:56:48' prior: 50475582!
transactions
	| transacctions |
	transacctions _ OrderedCollection new.
	^accounts first transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:57:39' prior: 50475604!
transactions
	| transacctions |
	transacctions _ OrderedCollection new.
	accounts ifNotEmpty: [transacctions add: accounts first transactions].
	
	^transacctions.! !

----End fileIn of /home/clinux01/Documentos/6/linux64/Packages/TerseGuide.pck.st----!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:58:24' prior: 50475611!
transactions
	| transacctions |
	transacctions _ OrderedCollection new.
	accounts ifNotEmpty: [transacctions addAll: accounts first transactions].
	
	^transacctions.! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:58:25'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:58:25'!
FAILURE!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:58:25'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:59:06' prior: 50475567!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: account transactions first equals: portfolio transactions first 
	
! !

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:59:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/16/2022 21:59:18'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:59:32'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:59:34'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/16/2022 21:59:49' prior: 50478567!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: account transactions equals: portfolio transactions 
	
! !

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/16/2022 21:59:49'!
PASSED!

----QUIT----(16 May 2022 22:02:08) CuisUniversity-5096.image priorSource: 4557982!

----STARTUP---- (19 May 2022 17:07:28) as /home/clinux01/Documentos/6/linux64/CuisUniversity-5096.image!


!testRun: #PortfolioTests #test07 stamp: 'JDR 5/19/2022 17:07:39'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/19/2022 17:07:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:04:54' prior: 50478539!
transactions
	| transactions |
	transactions _ OrderedCollection new.
	accounts ifNotEmpty: [transactions addAll: accounts first transactions].
	
	^transactions.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:09:13'!
test08

	| portfolio account account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account transactions equals: portfolio transactions 
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:09:40' prior: 50478670!
test08

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	
	self assert: 3 equals: portfolio transactions size.
	
! !

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:10:08'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:10:08'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:11:35' prior: 50478662!
transactions
	| transactions |
	transactions _ OrderedCollection new.
	accounts ifNotEmpty: [transactions addAll: accounts transactions].
	
	^transactions.! !

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:11:39'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:11:39'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:12:11'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:12:11'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:13:04'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:13:04'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:13:25'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:13:47'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:13:47'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:14:05'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:14:13'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:14:13'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:16:01' prior: 50478708!
transactions
	| transactions |
	transactions _ OrderedCollection new.
	accounts do: [ :anAccount | transactions addAll: anAccount transactions ].
	
	^transactions.! !

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:16:14'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:16:20'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:17:33' prior: 50478688!
test08

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, account2 transactions equals: portfolio transactions.
	
! !

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:17:41'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:20:10'!
test09

	| portfolio account1 account2 account portfolioToAdd |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolioToAdd _ Portfolio new.
	
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, account2 transactions equals: portfolio transactions.
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:20:34' prior: 50478814!
test09

	| portfolio account portfolioToAdd |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolioToAdd _ Portfolio new.
	
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	portfolio addAccount: account.
	
	self assert: 3 equals: portfolio transactions size.
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:21:11' prior: 50478831!
test09

	| portfolio account portfolioToAdd |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account.	
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	portfolio addAccount: account.
	
	self assert: 3 equals: portfolio transactions size.
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:22:53' prior: 50478844!
test09

	| portfolio account portfolioToAdd |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	Withdraw register: 50 on: account.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account.	
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd. 
	
	self assert: 2 equals: portfolio transactions size.
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:22:56'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:22:56'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:24:34' prior: 50478745!
transactions
	| transactions |
	transactions _ OrderedCollection new.
	accounts do: [ :anAccount | transactions addAll: anAccount transactions ].
	portfolios do: [ :aPortfolio | transactions addAll: aPortfolio transactions].
	
	^transactions.! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:24:38'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:26:44' prior: 50478858!
test09

	| portfolio portfolioToAdd account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 10 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addPortfolio: portfolioToAdd. 
	
	self assert: 3 equals: portfolio transactions size.
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:26:50'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:27:01'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:29:35' prior: 50478891!
test09

	| portfolio portfolioToAdd account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 10 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account2.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account1.
	portfolio addPortfolio: portfolioToAdd. 
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, portfolioToAdd transactions equals: portfolio transactions
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/19/2022 20:29:38'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:32:37'!
test10
	
	| account deposit portfolio |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 10 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: portfolio hasRegistered: deposit.
! !

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/19/2022 20:32:53'!
ERROR!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/19/2022 20:32:53'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:33:37' prior: 50478956!
test10
	
	| account deposit portfolio |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 10 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: (portfolio hasRegistered: deposit).
! !

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/19/2022 20:33:39'!
ERROR!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/19/2022 20:33:39'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:33:44'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:33:57' prior: 50478987!
hasRegistered: aDeposit 
	
	^true! !

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/19/2022 20:33:59'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:34:27' prior: 50478992!
hasRegistered: aTransaction 
	
	^true! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:39:09'!
test11
	
	| account deposit portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw |
	account1 _ ReceptiveAccount new.
	deposit1 _ Deposit register: 10 on: account1.
	
	account2 _ ReceptiveAccount new.
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account1.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	portfolio addAccount: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:39:47' prior: 50479003!
test11
	
	| portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw |
	account1 _ ReceptiveAccount new.
	deposit1 _ Deposit register: 10 on: account1.
	
	account2 _ ReceptiveAccount new.
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account1.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	portfolio addAccount: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
! !

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/19/2022 20:39:56'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:40:29' prior: 50478999!
hasRegistered: aTransaction 
	
	^self transactions includes: aTransaction! !

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/19/2022 20:40:39'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 20:42:51' prior: 50479027!
test11
	
	| portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw deposit3 unusedAccount |
	account1 _ ReceptiveAccount new.
	deposit1 _ Deposit register: 10 on: account1.
	
	account2 _ ReceptiveAccount new.
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.
	
	unusedAccount _ ReceptiveAccount new.
	deposit3 _ Deposit register: 100 on: unusedAccount.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account1.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	portfolio addAccount: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
	self deny: (portfolio hasRegistered: deposit3).
! !

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/19/2022 20:42:58'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/19/2022 21:10:24' prior: 50479061!
test11
	
	| portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw |
	account1 _ ReceptiveAccount new.
	deposit1 _ Deposit register: 10 on: account1.
	
	account2 _ ReceptiveAccount new.
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addAccount: account1.
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: portfolioToAdd.
	portfolio addAccount: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
	self deny: (portfolioToAdd hasRegistered: deposit2).
! !

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/19/2022 21:10:28'!
PASSED!

----STARTUP---- (21 May 2022 19:00:12) as /home/jerodacunda/Escritorio/linux64-5/CuisUniversity-5096.image!


----End fileIn of /home/jerodacunda/Escritorio/linux64-5/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:01:04'!
PASSED!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #XXX category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:12:16'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

XXX subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:12:34'!
XXX subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

XXX subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:12:41'!
XXX subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:13:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/21/2022 19:13:14'!
PASSED!
!XXX methodsFor: 'no messages' stamp: 'JDR 5/21/2022 19:14:08'!
hasRegistered: aTransaction

	self subclassResponsibility ! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:14:22'!
transactions 

	self subclassResponsibility ! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:14:31'!
balance

	self subclassResponsibility ! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:14:49' overrides: 16920235!
initialize

	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:17:48'!
addXxx: aXxx
	
	aXxx addTo: self.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'JDR 5/21/2022 19:20:19'!
addTo: aPortfolio

	aPortfolio addAccount: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:21:03'!
addTo: aPortfolio

	aPortfolio addPortfolio: self.! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:21:10'!
PASSED!
!XXX methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:21:27'!
addTo: aPortfolio

	self subclassResponsibility ! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:24:35' prior: 50474112!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:24:38'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:24:41' prior: 50474737!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addAccount: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!methodRemoval: Portfolio #addTo: stamp: 'JDR 5/21/2022 19:27:40'!
addTo: aPortfolio

	aPortfolio addPortfolio: self.!

!methodRemoval: ReceptiveAccount #addTo: stamp: 'JDR 5/21/2022 19:27:43'!
addTo: aPortfolio

	aPortfolio addAccount: self.!

!methodRemoval: XXX #addTo: stamp: 'JDR 5/21/2022 19:27:50'!
addTo: aPortfolio

	self subclassResponsibility !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:28:18'!
XXX subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios xxxs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:28:17' prior: 50474692!
addXxx: aXxx
	
	xxxs add: aXxx.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:28:45' prior: 50474750!
test02

	| portfolio account |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:28:53'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:28:53'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:06' prior: 50474122!
test03

	| portfolio account portfolioToAdd |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addXxx: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: portfolioToAdd.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:11' prior: 50474135!
test04

	| portfolio account1 account2 |
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1.
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 125 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:23' prior: 50474150!
test05

	| portfolio account1 account2 portfolioToAdd1 portfolioToAdd2 |
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1.	
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.
	
	portfolioToAdd1 _ Portfolio new.
	portfolioToAdd1 addXxx: account1.
	
	portfolioToAdd2 _ Portfolio new.
	portfolioToAdd2 addXxx: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: portfolioToAdd1.
	portfolio addXxx: portfolioToAdd2.
	
	self assert: 150 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:29' prior: 50474177!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: account transactions equals: portfolio transactions 
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:35' prior: 50474189!
test08

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, account2 transactions equals: portfolio transactions.
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:46' prior: 50474207!
test09

	| portfolio portfolioToAdd account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 10 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addXxx: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: portfolioToAdd. 
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, portfolioToAdd transactions equals: portfolio transactions
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:48' prior: 50474228!
test10
	
	| account deposit portfolio |
	account _ ReceptiveAccount new.
	deposit _ Deposit register: 10 on: account. 
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self assert: (portfolio hasRegistered: deposit).
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:29:56' prior: 50474238!
test11
	
	| portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw |
	account1 _ ReceptiveAccount new.
	deposit1 _ Deposit register: 10 on: account1.
	
	account2 _ ReceptiveAccount new.
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addXxx: account1.
	
	portfolio _ Portfolio new.
	portfolio addXxx: portfolioToAdd.
	portfolio addXxx: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
	self deny: (portfolioToAdd hasRegistered: deposit2).
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:31:27' prior: 50474486 overrides: 50474683!
balance
	
	| balance |
	
	balance _ 0.

	xxxs do: [ :xxx | balance _ xxx balance + balance].
	
	^balance! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:31:37'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:31:37'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:31:42'!
ERROR!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:31:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:32:16' prior: 50474501 overrides: 50474688!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.
	xxxs _ OrderedCollection new.
	! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:32:22'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:32:24'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:32:29'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:32:32'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:32:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:33:21' prior: 50474507 overrides: 50474679!
transactions

	| transactions |
	
	transactions _ OrderedCollection new.
	xxxs do: [ :aXxx | transactions addAll: aXxx transactions].
	
	^transactions.! !

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:33:29'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:33:31'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:33:34'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:33:39'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:33:49'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:33:51'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:34:17'!
PASSED!

!methodRemoval: Portfolio #addPortfolio: stamp: 'JDR 5/21/2022 19:34:36'!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio!

!methodRemoval: Portfolio #addAccount: stamp: 'JDR 5/21/2022 19:34:40'!
addAccount: anAccount

	accounts add: anAccount

	!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:34:43'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:35:47' prior: 50474495 overrides: 50474674!
hasRegistered: aTransaction 
	
	^xxxs anySatisfy: [ :aXxx | aXxx hasRegistered: aTransaction].! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:35:51'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:37:53' prior: 50474953 overrides: 50474688!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new.
	xxxs _ Set new.
	! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:37:57'!
FAILURE!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:37:57'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 19:37:59'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:38:21' prior: 50475089 overrides: 50474688!
initialize

	xxxs _ Set new.
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:38:26'!
XXX subclass: #Portfolio
	instanceVariableNames: 'portfolios xxxs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 19:38:26'!
XXX subclass: #Portfolio
	instanceVariableNames: 'xxxs'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:55:52'!
test12

	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 19:58:33' prior: 50475170!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error-MessageNotUnderstood 
		withMessageText: 's'
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:01:50' prior: 50475174!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withMessageText: [:anErrorDescription | self assert: anErrorDescription equals: Portfolio xxxErrorDescription]
! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:01:58'!
FAILURE!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:01:58'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:03:44' prior: 50474779!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: self xxxErrorDescription].
	xxxs add: aXxx.! !
!Portfolio class methodsFor: 'no messages' stamp: 'JDR 5/21/2022 20:04:25'!
xxxErrorDescription

	^'cannot add a portfolio into itself'! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:04:38'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:04:38'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:05:43' prior: 50475206!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: self class xxxErrorDescription].
	xxxs add: aXxx.! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:05:47'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:05:47'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:05:51'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:05:51'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:06:33' prior: 50475222!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio xxxErrorDescription].
	xxxs add: aXxx.! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:06:37'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:06:37'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:08:28'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:12:17' prior: 50475186!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anException | self assert: anException messageText equals: Portfolio xxxErrorDescription ]
! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:12:20'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:12:26' prior: 50475252!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxErrorDescription ]
! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:12:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:18:03'!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: portfolio1.
	
	self should: [portfolio1 addXxx: portfolio2] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxyErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:19:18' prior: 50475286!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: portfolio1.
	
	self should: [portfolio2 addXxx: portfolio1] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxyErrorDescription ]
! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:27'!
PortfolioCannotBeAddedToItselfErrorDescription

	^'cannot add a portfolio into itself'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:27' prior: 50475238!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio PortfolioCannotBeAddedToItselfErrorDescription].
	xxxs add: aXxx.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:27' prior: 50475269!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio PortfolioCannotBeAddedToItselfErrorDescription ]
! !

!methodRemoval: Portfolio class #xxxErrorDescription stamp: 'JDR 5/21/2022 20:20:27'!
xxxErrorDescription

	^'cannot add a portfolio into itself'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:38'!
portfolioCannotBeAddedToItselfErrorDescription

	^'cannot add a portfolio into itself'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:38' prior: 50475326!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	xxxs add: aXxx.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:20:38' prior: 50475334!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio portfolioCannotBeAddedToItselfErrorDescription ]
! !

!methodRemoval: Portfolio class #PortfolioCannotBeAddedToItselfErrorDescription stamp: 'JDR 5/21/2022 20:20:38'!
PortfolioCannotBeAddedToItselfErrorDescription

	^'cannot add a portfolio into itself'!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:21:02'!
FAILURE!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:21:02'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:23:58' prior: 50475360!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | (xxx = aXxx) ifTrue: [self error: Portfolio xxyErrorDescription] ].
	
	xxxs add: aXxx.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:25:07'!
xxyErrorDescription

	'xxx is already added in portfolio'! !

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:25:16'!
PASSED!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:25:58'!
xxxIsAlreadyAddedErrorDescription

	'xxx is already added in portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:25:58' prior: 50475395!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | (xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] ].
	
	xxxs add: aXxx.! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:25:58' prior: 50475303!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: portfolio1.
	
	self should: [portfolio2 addXxx: portfolio1] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!methodRemoval: Portfolio class #xxyErrorDescription stamp: 'JDR 5/21/2022 20:25:58'!
xxyErrorDescription

	'xxx is already added in portfolio'!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:26:14'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:30:12' prior: 50475429!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: account.
	
	portfolio1 addXxx: portfolio2.	
	
	self should: [portfolio1 addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:30:12' prior: 50475482!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: account.
	
	portfolio1 addXxx: portfolio2.	
	
	self should: [portfolio1 addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:25:58' prior: 50475499!
test13

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: portfolio1.
	
	self should: [portfolio2 addXxx: portfolio1] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:30:56'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:31:14'!
test14

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: account.
	
	portfolio1 addXxx: portfolio2.	
	
	self should: [portfolio1 addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxErrorDescription ]
! !

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 20:31:17'!
FAILURE!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 20:31:17'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:36:15' prior: 50475418!
addXxx: aXxx
	
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] 	].
	
	
	
	xxxs add: aXxx.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:38:13'!
assertAXxxIsNotDescendant: aXxx
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:38:25' prior: 50475558!
addXxx: aXxx

	
	
	
	xxxs add: aXxx.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:38:30' prior: 50475568!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] 	].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:38:42' prior: 50475573!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	xxxs add: aXxx.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:39:48' prior: 50475578!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] 	].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:42:06' prior: 50475595!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		
		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] .
		(xxx isKindOf: Portfolio) ifTrue: [ self assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:42:42' prior: 50475536!
test14

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: account.
	
	portfolio1 addXxx: portfolio2.	
	
	self should: [portfolio1 addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:43:26' prior: 50475606!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		
		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] .
		(xxx isKindOf: Portfolio) ifTrue: [ xxx assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 20:43:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:53:16' prior: 50475638!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		xxx m1: aXxx m2: [self error: Portfolio ].
		(xxx isKindOf: Portfolio) ifTrue: [ xxx assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:53:30' prior: 50475654!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		xxx m1: aXxx m2: [self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
		(xxx isKindOf: Portfolio) ifTrue: [ xxx assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:54:40' prior: 50475666!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		xxx m1: aXxx m2: [self error: Portfolio xxxIsAlreadyAddedErrorDescription ] ].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:55:36' prior: 50475679!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		xxx m1: aXxx m2: [self error: Portfolio xxxIsAlreadyAddedErrorDescription ] ].
	
	
	! !
!XXX methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:56:43'!
m1: aXxx m2: aBlock

	(self = aXxx) ifTrue: [aBlock value]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:42:06' prior: 50475690!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		
		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] .
		(xxx isKindOf: Portfolio) ifTrue: [ self assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !

!methodRemoval: XXX #m1:m2: stamp: 'JDR 5/21/2022 20:59:05'!
m1: aXxx m2: aBlock

	(self = aXxx) ifTrue: [aBlock value]!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 20:59:07'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 20:59:07'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 20:59:07'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 20:59:07'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:59:18'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:59:21'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 20:59:46' prior: 50475705!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio portfolioCannotBeAddedToItselfErrorDescription].
	
	xxxs do: [ :xxx | 		
		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] .
		(xxx isKindOf: Portfolio) ifTrue: [ xxx assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 20:59:52'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:01:57'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:01:57'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:01:57'!
FAILURE!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:02:04'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:02:04'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:02:08'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:02:27'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:06:37'!
test15

	| account portfolio1 portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: portfolio1.
	
	self should: [portfolio1 addXxx: portfolio2] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:06:40'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:06:40'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:07:42'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:07:42'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:09:21' prior: 50475589!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 21:10:06'!
XXX subclass: #Portfolio
	instanceVariableNames: 'xxxs parent'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:10:03'!
markAsParent: aPortfolio

	parent _ aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:11:40' prior: 50475948!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	(parent = aXxx) ifTrue: [ self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:11:53'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:15:43'!
test16

	| account portfolio portfolioParent1 portfolioParent2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.	
	
	self should: [portfolio addXxx: portfolioParent1] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:15:58'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:15:58'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:19:00' prior: 50475963!
markAsParent: aPortfolio

	parent add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:19:15' prior: 50475151 overrides: 50474688!
initialize

	xxxs _ Set new.
	parent _ OrderedCollection new.	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:19:51' prior: 50475968!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	(parent includes: aXxx) ifTrue: [ self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:19:55'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JDR 5/21/2022 21:20:08'!
XXX subclass: #Portfolio
	instanceVariableNames: 'xxxs parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:20:08' prior: 50476018!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	(parents includes: aXxx) ifTrue: [ self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:20:08' prior: 50476007!
markAsParent: aPortfolio

	parents add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:20:08' prior: 50476013 overrides: 50474688!
initialize

	xxxs _ Set new.
	parents _ OrderedCollection new.	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:25:53'!
test17

	| account portfolio portfolioGrandParent portfolioParent |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	portfolioParent _ Portfolio new.	
	portfolioGrandParent _ Portfolio new.
	
	portfolioGrandParent addXxx: portfolioParent.
	portfolioParent addXxx: portfolio.	
	
	self should: [portfolio addXxx: portfolioGrandParent] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:26:00'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:26:00'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:29:27' prior: 50476039!
addXxx: aXxx

	self assertAXxxIsNotDescendant: aXxx.	
	
	(parents includes: aXxx) ifTrue: [ self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
	parents do: [ :xxx | xxx m55: aXxx ].
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:34:33' prior: 50476088!
addXxx: aXxx
	
	| root |
	(parents includes: aXxx) ifTrue: [ self error: Portfolio xxxIsAlreadyAddedErrorDescription ].
	
	root _ self findRoot.
	root assertAXxxIsNotDescendant: aXxx.
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:35:00' prior: 50476100!
addXxx: aXxx
	
	| root |
		
	root _ self findRoot.
	root assertAXxxIsNotDescendant: aXxx.
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:36:18'!
findRoot

	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ].! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:36:25'!
FAILURE!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:36:25'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:36:25'!
ERROR!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:36:25'!
ERROR!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:36:25'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:37:20' prior: 50476120!
findRoot

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ].! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:38:03'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:38:03'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:38:03'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:38:07'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:38:18'!
isRoot
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:38:38' prior: 50476215!
isRoot
	
	^parents isEmpty! !

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:38:40'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:38:44'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:38:44'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:38:44'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:38:44'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:38:44'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:38:48'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:39:24'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:39:24'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:39:30'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:39:34'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:39:34'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:39:34'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:39:34'!
FAILURE!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:39:48'!
FAILURE!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:39:48'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:39:48'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:39:48'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:39:48'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:40:04'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:40:46'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:40:56'!
FAILURE!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:40:56'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:40:56'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:40:56'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:40:56'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:41:11'!
FAILURE!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:44:02'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:02'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:44:02'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:44:02'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:14'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:14'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:26'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:26'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:57'!
FAILURE!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:44:57'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:45:59' prior: 50475737!
assertAXxxIsNotDescendant: aXxx	
		
	(aXxx = self) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription].
	
	xxxs do: [ :xxx | 		
		(xxx = aXxx) ifTrue: [self error: Portfolio xxxIsAlreadyAddedErrorDescription] .
		(xxx isKindOf: Portfolio) ifTrue: [ xxx assertAXxxIsNotDescendant: aXxx ].
	].
	
	
	! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:46:13' prior: 50475368!
test12

	| account portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:46:20'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:46:20'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:46:20'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:46:39'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:47:36'!
FAILURE!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:47:36'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:47:45'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:47:51'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:47:51'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:47:51'!
FAILURE!

----QUIT----(21 May 2022 21:48:07) CuisUniversity-5096.image priorSource: 4557982!

----STARTUP---- (21 May 2022 21:49:36) as /home/jerodacunda/Escritorio/linux64-6/CuisUniversity-5096.image!


----End fileIn of /home/jerodacunda/Escritorio/linux64-6/Portfolio-Ejercicio.st----!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:50:17'!
FAILURE!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 21:50:17'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:50:17'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:06'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:51:10'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 21:51:10'!
FAILURE!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 21:51:17'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:22'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:22'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:25'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:31'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:31'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:34'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:51:34'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:52:52'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:52:52'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:57:14'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:57:18'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 21:57:18'!
FAILURE!

----End fileIn of /home/jerodacunda/Escritorio/linux64-6/Packages/TerseGuide.pck.st----!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 21:59:59' prior: 50474204!
test09

	| portfolio portfolioToAdd account1 account2 expectedTransactions |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 10 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addXxx: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: portfolioToAdd. 
	
	expectedTransactions _ account1 transactions, portfolioToAdd transactions.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: expectedTransactions equals: portfolio transactions
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:00:04'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:00:08'!
FAILURE!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:00:08'!
FAILURE!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:02:06' prior: 50477734!
test09

	| portfolio portfolioToAdd account1 account2 expectedTransactions |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 10 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.
	
	portfolioToAdd _ Portfolio new.
	portfolioToAdd addXxx: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: portfolioToAdd. 
	
	expectedTransactions _ account1 transactions, portfolioToAdd transactions.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: expectedTransactions asSet equals: portfolio transactions asSet
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:08'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:11'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:15'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:17'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:19'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:20'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:21'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:02:43' prior: 50474186!
test08

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.
	Deposit register: 100 on: account1. 
	
	account2 _ ReceptiveAccount new.
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: (account1 transactions, account2 transactions) asSet equals: portfolio transactions asSet.
	
! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:02:52'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:02:52'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:02:52'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:05:16' prior: 50474635!
findRoot

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [aParent findRoot] ].! !

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:05:23'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:05:23'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:05:31'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:05:31'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:05:51' prior: 50477865!
findRoot

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [^aParent findRoot] ].! !

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:05:56'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:10:27'!
test18

	| account portfolio portfolioParent1 portfolioParent2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	portfolio _ Portfolio new.
	
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.
	portfolioParent2 addXxx: account.	
	
	self should: [portfolio addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:11:06'!
FAILURE!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:11:06'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:12:58'!
findRoots

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [^aParent findRoot] ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:12:58' prior: 50474608!
addXxx: aXxx
	
	| root |
		
	root _ self findRoots.
	root assertAXxxIsNotDescendant: aXxx.
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:12:58' prior: 50477882!
findRoot

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [^aParent findRoots] ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:12:58' prior: 50477917!
findRoots

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [^aParent findRoots] ].! !

!methodRemoval: Portfolio #findRoot stamp: 'JDR 5/21/2022 22:12:58'!
findRoot

	(self isRoot) ifTrue: [^self].
	parents do: [ :aParent | (aParent isRoot) ifTrue: [^aParent] ifFalse: [^aParent findRoots] ].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:14:11'!
addRootsTo: aSetOfRoots

	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:15:31' prior: 50477956!
addRootsTo: aSetOfRoots

	(self isRoot) ifTrue: [self addRootsTo: aSetOfRoots].
	parents do: [ :aParent | aParent addRootsTo: aSetOfRoots ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:16:58' prior: 50477942!
findRoots

	| roots |
	roots _ Set new.
	self addRootsTo: roots.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:18:28' prior: 50477960!
addRootsTo: aSetOfRoots

	(self isRoot) 
		ifTrue: [self addRootsTo: aSetOfRoots] 
		ifFalse: [	parents do: [ :aParent | aParent addRootsTo: aSetOfRoots ] ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:20:12' prior: 50477974!
addRootsTo: aSetOfRoots

	(self isRoot) 
		ifTrue: [aSetOfRoots add: self] 
		ifFalse: [	parents do: [ :aParent | aParent addRootsTo: aSetOfRoots ] ]! !

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:20:25'!
FAILURE!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:20:25'!
FAILURE!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 22:20:40'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 22:20:40'!
FAILURE!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:20:40'!
FAILURE!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:20:40'!
FAILURE!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:20:40'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:22:00' prior: 50477925!
addXxx: aXxx
	
	| roots |
		
	roots _ self findRoots.
	roots do: [ :aRoot | aRoot assertAXxxIsNotDescendant: aXxx. ].
	
	xxxs add: aXxx.
	(aXxx isKindOf: Portfolio) ifTrue: [aXxx markAsParent: self]! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:22:12'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JDR 5/21/2022 22:22:12'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 22:22:20'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 22:22:20'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:22:20'!
ERROR!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:22:26'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:22:56' prior: 50477968!
findRoots

	| roots |
	roots _ Set new.
	self addRootsTo: roots.
	
	^roots! !

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/21/2022 22:23:00'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:30:51' prior: 50474274!
test13

	| account portfolio portfolioParent |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	portfolioParent _ Portfolio new.
	portfolioParent addXxx: portfolio.
	
	self should: [portfolioParent addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/21/2022 22:30:59'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:31:49' prior: 50474291!
test14

	| account portfolioParent portfolio2 |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioParent _ Portfolio new.
	
	portfolio2 _ Portfolio new.
	portfolio2 addXxx: account.
	
	portfolioParent addXxx: portfolio2.	
	
	self should: [portfolioParent addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:31:54' prior: 50478231!
test14

	| account portfolioParent portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioParent _ Portfolio new.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	portfolioParent addXxx: portfolio.	
	
	self should: [portfolioParent addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:32:57' prior: 50474308!
test15

	| account portfolio1 portfolioParent |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio1 _ Portfolio new.
	portfolio1 addXxx: account.
	
	portfolioParent _ Portfolio new.
	portfolioParent addXxx: portfolio1.
	
	self should: [portfolio1 addXxx: portfolioParent] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:33:00' prior: 50478267!
test15

	| account portfolio portfolioParent |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account.
	
	portfolioParent _ Portfolio new.
	portfolioParent addXxx: portfolio.
	
	self should: [portfolio addXxx: portfolioParent] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:33:51' prior: 50478285!
test15

	| portfolio portfolioParent |
	
	portfolio _ Portfolio new.
	portfolioParent _ Portfolio new.
	
	portfolioParent addXxx: portfolio.
	
	self should: [portfolio addXxx: portfolioParent] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:34:10' prior: 50478249!
test14

	| account portfolioParent portfolio |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolioParent _ Portfolio new.	
	portfolio _ Portfolio new.
	
	portfolio addXxx: account.
	
	portfolioParent addXxx: portfolio.	
	
	self should: [portfolioParent addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:34:31' prior: 50478210!
test13

	| account portfolio portfolioParent |
	account _ ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio _ Portfolio new.	
	portfolioParent _ Portfolio new.
	
	portfolio addXxx: account.
	portfolioParent addXxx: portfolio.
	
	self should: [portfolioParent addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:37:39' prior: 50474325!
test16

	| portfolio portfolioParent1 portfolioParent2 |
	
	portfolio _ Portfolio new.	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.	
	
	self should: [portfolio addXxx: portfolioParent1] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/21/2022 22:37:44'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/21/2022 22:38:29' prior: 50474346!
test17

	| portfolio portfolioGrandParent portfolioParent |
	
	portfolio _ Portfolio new.
	portfolioParent _ Portfolio new.	
	portfolioGrandParent _ Portfolio new.
	
	portfolioGrandParent addXxx: portfolioParent.
	portfolioParent addXxx: portfolio.	
	
	self should: [portfolio addXxx: portfolioGrandParent] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/21/2022 22:38:32'!
PASSED!

----QUIT----(21 May 2022 22:52:52) CuisUniversity-5096.image priorSource: 4557982!

----STARTUP---- (22 May 2022 18:28:56) as /home/jerodacunda/Escritorio/linux64-6/CuisUniversity-5096.image!

!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:29:51' prior: 50474106!
test01

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:30:12' prior: 50474112!
test02

	| portfolio account |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	portfolio addXxx: account.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:30:53' prior: 50474122!
test03

	| portfolio account portfolioToAdd |
	
	account _ ReceptiveAccount new.	
	portfolioToAdd _ Portfolio new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	portfolioToAdd addXxx: account.
	portfolio addXxx: portfolioToAdd.
	
	self assert: 100 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/22/2022 18:30:56'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/22/2022 18:30:58'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/22/2022 18:31:00'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:31:50' prior: 50478408!
test02

	| portfolio account |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:31:54' prior: 50478418!
test03

	| portfolio account portfolioToAdd |
	
	account _ ReceptiveAccount new.	
	portfolioToAdd _ Portfolio new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolioToAdd addXxx: account.
	portfolio addXxx: portfolioToAdd.
	
	self assert: 100 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:32:17' prior: 50474134!
test04

	| portfolio account1 account2 |
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	
	Deposit register: 100 on: account1.
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.
	
	portfolio _ Portfolio new.
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 125 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:32:25' prior: 50478461!
test04

	| portfolio account1 account2 |
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1.
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.	
	
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 125 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/22/2022 18:32:28'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:33:29' prior: 50474148!
test05

	| portfolio account1 account2 portfolioToAdd1 portfolioToAdd2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolioToAdd1 _ Portfolio new.
	portfolioToAdd2 _ Portfolio new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1.	
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.	
	
	portfolioToAdd1 addXxx: account1.	
	portfolioToAdd2 addXxx: account2.	
	
	portfolio addXxx: portfolioToAdd1.
	portfolio addXxx: portfolioToAdd2.
	
	self assert: 150 equals: portfolio balance
	
! !

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/22/2022 18:33:33'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:33:39' prior: 50478476!
test04

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1.
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.	
	
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 125 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:34:02' prior: 50478516!
test04

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1.
	
	Deposit register: 100 on: account2.
	Withdraw register: 75 on: account2.	
	
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 125 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:34:07' prior: 50478493!
test05

	| portfolio account1 account2 portfolioToAdd1 portfolioToAdd2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolioToAdd1 _ Portfolio new.
	portfolioToAdd2 _ Portfolio new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1.	
	
	Deposit register: 100 on: account2.
	Withdraw register: 50 on: account2.	
	
	portfolioToAdd1 addXxx: account1.	
	portfolioToAdd2 addXxx: account2.	
	
	portfolio addXxx: portfolioToAdd1.
	portfolio addXxx: portfolioToAdd2.
	
	self assert: 150 equals: portfolio balance
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:34:27' prior: 50474168!
test06

	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio transactions isEmpty
	
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:34:44' prior: 50474174!
test07

	| portfolio account |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account. 
	
	portfolio addXxx: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: account transactions equals: portfolio transactions 
	
! !

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/22/2022 18:34:46'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:35:09' prior: 50477804!
test08

	| portfolio account1 account2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account1. 
	
	Deposit register: 50 on: account2.
	Withdraw register: 10 on: account2.
	
	portfolio addXxx: account1.
	portfolio addXxx: account2.
	
	self assert: 3 equals: portfolio transactions size.
	self assert: (account1 transactions, account2 transactions) asSet equals: portfolio transactions asSet.
	
! !

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test01 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test02 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test03 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test04 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test05 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test06 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test07 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test15 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test16 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test17 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/22/2022 18:35:16'!
PASSED!

!testRun: #PortfolioTests #test08 stamp: 'JDR 5/22/2022 18:35:19'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:36:20' prior: 50477764!
test09

	| portfolio portfolioToAdd account1 account2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolioToAdd _ Portfolio new.
	portfolio _ Portfolio new.
	
	Deposit register: 10 on: account1. 
	
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.	
	
	portfolioToAdd addXxx: account2.	
	portfolio addXxx: account1.
	portfolio addXxx: portfolioToAdd. 
	
	self assert: 3 equals: portfolio transactions size.
	self assert: account1 transactions, portfolioToAdd transactions asSet equals: portfolio transactions asSet
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/22/2022 18:36:23'!
ERROR!

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/22/2022 18:36:23'!
ERROR!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:36:35' prior: 50478655!
test09

	| portfolio portfolioToAdd account1 account2 |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolioToAdd _ Portfolio new.
	portfolio _ Portfolio new.
	
	Deposit register: 10 on: account1. 
	
	Deposit register: 100 on: account2. 
	Withdraw register: 50 on: account2.	
	
	portfolioToAdd addXxx: account2.	
	portfolio addXxx: account1.
	portfolio addXxx: portfolioToAdd. 
	
	self assert: 3 equals: portfolio transactions size.
	self assert: (account1 transactions, portfolioToAdd transactions) asSet equals: portfolio transactions asSet
! !

!testRun: #PortfolioTests #test09 stamp: 'JDR 5/22/2022 18:36:37'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:37:07' prior: 50474225!
test10
	
	| account deposit portfolio |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	deposit _ Deposit register: 10 on: account. 
	
	portfolio addXxx: account.
	
	self assert: (portfolio hasRegistered: deposit).
! !

!testRun: #PortfolioTests #test10 stamp: 'JDR 5/22/2022 18:37:09'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:38:22' prior: 50474235!
test11
	
	| portfolio account1 account2 deposit1 deposit2 portfolioToAdd withdraw |
	
	account1 _ ReceptiveAccount new.	
	account2 _ ReceptiveAccount new.
	portfolioToAdd _ Portfolio new.
	portfolio _ Portfolio new.
	
	deposit1 _ Deposit register: 10 on: account1.
	
	deposit2 _ Deposit register: 50 on: account2.
	withdraw _ Withdraw register: 20 on: account2.	
	
	portfolioToAdd addXxx: account1.	
	
	portfolio addXxx: portfolioToAdd.
	portfolio addXxx: account2.
	
	self assert: (portfolio hasRegistered: deposit1).
	self assert: (portfolio hasRegistered: deposit2).
	self assert: (portfolio hasRegistered: withdraw).
	self deny: (portfolioToAdd hasRegistered: deposit2).
! !

!testRun: #PortfolioTests #test11 stamp: 'JDR 5/22/2022 18:38:57'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:39:16' prior: 50474259!
test12

	| account portfolio |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	
	self should: [portfolio addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/22/2022 18:39:23'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:39:35' prior: 50478336!
test13

	| account portfolio portfolioParent |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.	
	portfolioParent _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	portfolioParent addXxx: portfolio.
	
	self should: [portfolioParent addXxx: portfolio] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/22/2022 18:39:41'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:00' prior: 50478318!
test14

	| account portfolioParent portfolio |
	
	account _ ReceptiveAccount new.	
	portfolioParent _ Portfolio new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	
	portfolioParent addXxx: portfolio.	
	
	self should: [portfolioParent addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:06' prior: 50478784!
test14

	| account portfolioParent portfolio |
	
	account _ ReceptiveAccount new.	
	portfolioParent _ Portfolio new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	
	portfolioParent addXxx: portfolio.	
	
	self should: [ portfolioParent addXxx: account ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/22/2022 18:40:08'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:14' prior: 50478763!
test13

	| account portfolio portfolioParent |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.	
	portfolioParent _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	portfolioParent addXxx: portfolio.
	
	self should: [ portfolioParent addXxx: portfolio ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:22' prior: 50478745!
test12

	| account portfolio |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	Deposit register: 100 on: account.
	
	portfolio addXxx: account.
	
	self should: [ portfolio addXxx: portfolio ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:33' prior: 50478303!
test15

	| portfolio portfolioParent |
	
	portfolio _ Portfolio new.
	portfolioParent _ Portfolio new.
	
	portfolioParent addXxx: portfolio.
	
	self should: [ portfolio addXxx: portfolioParent ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:43' prior: 50478354!
test16

	| portfolio portfolioParent1 portfolioParent2 |
	
	portfolio _ Portfolio new.	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.	
	
	self should: [ portfolio addXxx: portfolioParent1 ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:40:50' prior: 50478374!
test17

	| portfolio portfolioGrandParent portfolioParent |
	
	portfolio _ Portfolio new.
	portfolioParent _ Portfolio new.	
	portfolioGrandParent _ Portfolio new.
	
	portfolioGrandParent addXxx: portfolioParent.
	portfolioParent addXxx: portfolio.	
	
	self should: [ portfolio addXxx: portfolioGrandParent ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:41:19' prior: 50477892!
test18

	| account portfolio portfolioParent1 portfolioParent2 |
	
	account _ ReceptiveAccount new.	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	portfolio _ Portfolio new.
		
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.
	portfolioParent2 addXxx: account.	
	
	self should: [ portfolio addXxx: account] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:41:21' prior: 50478909!
test18

	| account portfolio portfolioParent1 portfolioParent2 |
	
	account _ ReceptiveAccount new.	
	portfolioParent1 _ Portfolio new.	
	portfolioParent2 _ Portfolio new.
	portfolio _ Portfolio new.
		
	portfolioParent1 addXxx: portfolio.
	portfolioParent2 addXxx: portfolio.
	portfolioParent2 addXxx: account.	
	
	self should: [ portfolio addXxx: account ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test18 stamp: 'JDR 5/22/2022 18:41:24'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:41:40' prior: 50478802!
test14

	| account portfolioParent portfolio |
	
	account _ ReceptiveAccount new.	
	portfolioParent _ Portfolio new.	
	portfolio _ Portfolio new.
	
	portfolio addXxx: account.
	
	portfolioParent addXxx: portfolio.	
	
	self should: [ portfolioParent addXxx: account ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test14 stamp: 'JDR 5/22/2022 18:41:42'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:41:50' prior: 50478823!
test13

	| account portfolio portfolioParent |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.	
	portfolioParent _ Portfolio new.
	
	portfolio addXxx: account.
	portfolioParent addXxx: portfolio.
	
	self should: [ portfolioParent addXxx: portfolio ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test13 stamp: 'JDR 5/22/2022 18:41:51'!
PASSED!
!PortfolioTests methodsFor: 'as yet unclassified' stamp: 'JDR 5/22/2022 18:42:04' prior: 50478841!
test12

	| account portfolio |
	
	account _ ReceptiveAccount new.	
	portfolio _ Portfolio new.
	
	portfolio addXxx: account.
	
	self should: [ portfolio addXxx: portfolio ] 
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [ :anException | self assert: anException messageText equals: Portfolio xxxIsAlreadyAddedErrorDescription ]
! !

!testRun: #PortfolioTests #test12 stamp: 'JDR 5/22/2022 18:42:05'!
PASSED!