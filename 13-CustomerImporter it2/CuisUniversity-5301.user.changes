

----STARTUP---- (26 June 2022 21:41:53) as /home/jerodacunda/Escritorio/13/linux64/CuisUniversity-5301.image!


----End fileIn of /home/jerodacunda/Documentos/GitHub/is1-1C2022/13-CustomerImporter it2/CustomerImporter-2.st----!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:43:03'!
test01ValidCustomersImportCorrectly

	CustomerImporter valueFrom: self validImportData into: session..

	self assertImportedRightNumberOfCustomers.
	self assertPepeSanchezWasImportedCorrecty.
	self assertJuanPerezWasImportedCorrectly ! !

!methodRemoval: ImportTest #test01Import stamp: 'JDR 6/26/2022 21:43:03'!
test01Import

	CustomerImporter valueFrom: self validImportData into: session..

	self assertImportedRightNumberOfCustomers.
	self assertPepeSanchezWasImportedCorrecty.
	self assertJuanPerezWasImportedCorrectly !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:45:43' prior: 50519261!
test02CustomerIdTypeMustBeC

	self should: [CustomerImporter valueFrom: self invalidIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		 self assert: 0 equals: (session selectAllOfType: Customer) size ] .! !

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:45:44'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 21:45:44'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test06CustomerRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test07CustomerRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 21:45:45'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:46:11' prior: 50519273!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		self assert: 0 equals: (session selectAllOfType: Customer) size ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:46:12'!
FAILURE!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:46:49' prior: 50519960!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:46:50'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test06CustomerRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test07CustomerRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 21:46:51'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:47:12'!
test06AddressRecordHasLessThanSevenFields

	self should: [CustomerImporter valueFrom: self tooManyAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | self assert: CustomerImporter tooManyFieldsInAddressRecordErrorDescription equals: anError messageText ] .! !

!methodRemoval: ImportTest #test06CustomerRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:47:12'!
test06CustomerRecordHasLessThanSevenFields

	self should: [CustomerImporter valueFrom: self tooManyAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | self assert: CustomerImporter tooManyFieldsInAddressRecordErrorDescription equals: anError messageText ] .!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:47:22'!
test07AddressRecordHasMoreThanFiveFields

	self should: [CustomerImporter valueFrom: self tooFewAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | self assert: CustomerImporter tooFewFieldsInAddressRecordErrorDescription equals: anError messageText ] .! !

!methodRemoval: ImportTest #test07CustomerRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:47:22'!
test07CustomerRecordHasMoreThanFiveFields

	self should: [CustomerImporter valueFrom: self tooFewAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | self assert: CustomerImporter tooFewFieldsInAddressRecordErrorDescription equals: anError messageText ] .!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:47:42' prior: 50519285!
test04CustomerRecordHasLessThanSixFields

	self should: [CustomerImporter valueFrom: self tooManyCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooManyFieldsInCustomerRecordErrorDescription equals: anError messageText.
		self assert: 0 equals: (session selectAllOfType: Customer) size ] .! !

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:47:43'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 21:47:44'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:47:44'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:47:44'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:47:44'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:47:44'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:47:45'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:47:45'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 21:47:45'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:47:54' prior: 50519297!
test05CustomerRecordHasMoreThanFourFields

	self should: [CustomerImporter valueFrom: self tooFewCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooFewFieldsInCustomerRecordErrorDescription equals: anError messageText .
		self assert: 0 equals: (session selectAllOfType: Customer) size] .! !

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:47:55'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 21:47:56'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:47:56'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:47:56'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:47:56'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:47:57'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:47:57'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:47:57'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 21:47:57'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:53:32' prior: 50519978!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		
		importedCustomer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'.
		self assert: importedCustomer addresses isEmpty.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:53:35'!
ERROR!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:53:45'!
ERROR!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:54:00' prior: 50520157!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		
		importedCustomer := self assertCustomerWithIdentificationType: 'C' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'.
		self assert: importedCustomer addresses isEmpty.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:54:01'!
ERROR!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:54:05' prior: 50520182!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		
		importedCustomer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'.
		self assert: importedCustomer addresses isEmpty.
		 ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:56:31' prior: 50520204!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer | 
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		
		importedCustomer := self assertCustomerWithIdentificationType: 'D' number: '22333444' hasFirstName: 'Pepe' lastName: 'Sanchez'.
		
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:56:40'!
ERROR!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:57:12'!
ERROR!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 21:58:27' prior: 50520223!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |  
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:58:29'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 21:58:30'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 21:58:30'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 21:58:30'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 21:58:30'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 21:58:31'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 21:58:31'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 21:58:31'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 21:58:31'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:00:51' prior: 50520246!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer |  
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		importedCustomer := self customerWithIdentificationType: 'D' number: 2.
		 ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:01:33' prior: 50520287!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer |  
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		importedCustomer := self customerWithIdentificationType: 'D' number: '22333444'.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:01:36'!
ERROR!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:03:04' prior: 50520303!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer |  
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		importedCustomer := (session selectAllOfType: Customer) anyOne.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:03:07'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:03:07'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:03:08'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:03:08'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:03:08'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:03:08'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:03:08'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:03:09'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:03:09'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:04:13' prior: 50520322!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | | importedCustomer |  
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		importedCustomer := (session selectAllOfType: Customer) anyOne.
		self assert: importedCustomer addresses isEmpty.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:04:15'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:04:16'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:04:16'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:04:16'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:04:16'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:04:17'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:04:17'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:04:17'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:04:17'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:05:34' prior: 50520366!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |   
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		self assert: ( (session selectAllOfType: Customer) anyOne) addresses isEmpty.
		 ] .! !

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:05:43'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:05:43'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:05:44'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:06:00' prior: 50520019!
test06AddressRecordHasLessThanSevenFields

	self should: [CustomerImporter valueFrom: self tooManyAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooManyFieldsInAddressRecordErrorDescription equals: anError messageText.
		self assert: ( (session selectAllOfType: Customer) anyOne) addresses isEmpty. ] .! !

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:06:01'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:06:01'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:06:02'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:06:13' prior: 50520044!
test07AddressRecordHasMoreThanFiveFields

	self should: [CustomerImporter valueFrom: self tooFewAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooFewFieldsInAddressRecordErrorDescription equals: anError messageText.
		self assert: ( (session selectAllOfType: Customer) anyOne) addresses isEmpty. ] .! !

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:06:14'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:06:14'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:06:14'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:06:15'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:06:32' prior: 50519333!
test08AddressRecordMustBelongToACostumer

	self should: [CustomerImporter valueFrom: self addressWithoutCustomerData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter addressWithoutCustomerErrorDescription equals: anError messageText.
		self assert: ( (session selectAllOfType: Customer) anyOne) addresses isEmpty. ] .! !

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:06:33'!
ERROR!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:06:52' prior: 50520544!
test08AddressRecordMustBelongToACostumer

	self should: [CustomerImporter valueFrom: self addressWithoutCustomerData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter addressWithoutCustomerErrorDescription equals: anError messageText.
		] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:07:37'!
assertCustomerHasNoAddresses

	^ self assert: ( (session selectAllOfType: Customer) anyOne) addresses isEmpty! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:07:37' prior: 50520500!
test07AddressRecordHasMoreThanFiveFields

	self should: [CustomerImporter valueFrom: self tooFewAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooFewFieldsInAddressRecordErrorDescription equals: anError messageText.
		self assertCustomerHasNoAddresses. ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:07:37' prior: 50520456!
test06AddressRecordHasLessThanSevenFields

	self should: [CustomerImporter valueFrom: self tooManyAddressFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooManyFieldsInAddressRecordErrorDescription equals: anError messageText.
		self assertCustomerHasNoAddresses. ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:07:37' prior: 50520412!
test03AddressIdTypeMustBeA

	self should: [CustomerImporter valueFrom: self invalidAddressIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |   
		self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.		
		self assertCustomerHasNoAddresses.
		 ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:11:37'!
assertSessionHasNoCostumers

	^ self assert: 0 equals: (session selectAllOfType: Customer) size! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:11:37' prior: 50520113!
test05CustomerRecordHasMoreThanFourFields

	self should: [CustomerImporter valueFrom: self tooFewCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooFewFieldsInCustomerRecordErrorDescription equals: anError messageText .
		self assertSessionHasNoCostumers] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:11:37' prior: 50519917!
test02CustomerIdTypeMustBeC

	self should: [CustomerImporter valueFrom: self invalidIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		 self assertSessionHasNoCostumers ] .! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:11:37' prior: 50520069!
test04CustomerRecordHasLessThanSixFields

	self should: [CustomerImporter valueFrom: self tooManyCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooManyFieldsInCustomerRecordErrorDescription equals: anError messageText.
		self assertSessionHasNoCostumers ] .! !
!ImportTest methodsFor: 'test data' stamp: 'JDR 6/26/2022 22:13:21'!
invalidEmptyData

	^ReadStream on: '
'.! !
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:14:28'!
test09EmptyData

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		 self assertSessionHasNoCostumers ] .! !
!CustomerImporter class methodsFor: 'error descriptions' stamp: 'JDR 6/26/2022 22:15:31'!
invalidEmptyDataErrorDescription

	  ^'no data to load costumers'! !

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:15:47'!
FAILURE!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:15:56' prior: 50520674!
test09EmptyData

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		  ] .! !

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:15:56'!
FAILURE!
!CustomerImporter methodsFor: 'evaluating' stamp: 'JDR 6/26/2022 22:30:42' prior: 50519683!
importCustomer

	self assertCustomerRecordSizeIsFive.
	self assertRecordIsNotEmpty.
	
	newCustomer := Customer new.
			newCustomer firstName: (record) second.
			newCustomer lastName: (record) third.
			newCustomer identificationType: (record) fourth.
			newCustomer identificationNumber: (record) fifth.
			session persist: newCustomer! !
!CustomerImporter methodsFor: 'assertions' stamp: 'JDR 6/26/2022 22:31:31'!
assertRecordIsNotEmpty

	(record size = 1) ifTrue: [self error: CustomerImporter invalidEmptyDataErrorDescription ]! !

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:31:41'!
FAILURE!

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:31:41'!
FAILURE!
!CustomerImporter methodsFor: 'evaluating' stamp: 'JDR 6/26/2022 22:33:53' prior: 50519696!
importRecord

	(record isEmpty) ifTrue: [self error: CustomerImporter invalidEmptyDataErrorDescription ].
	
	(self isCustomerRecord) ifTrue: [^self importCustomer].
	(self isAddressRecord) ifTrue: [^self importAddress].
	
	self error: CustomerImporter invalidIdentificationTypeErrorDescription.! !

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:34:01'!
PASSED!

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:34:06'!
PASSED!
!CustomerImporter methodsFor: 'evaluating' stamp: 'JDR 6/26/2022 22:34:24' prior: 50520709!
importCustomer

	self assertCustomerRecordSizeIsFive.	
	
	newCustomer := Customer new.
			newCustomer firstName: (record) second.
			newCustomer lastName: (record) third.
			newCustomer identificationType: (record) fourth.
			newCustomer identificationNumber: (record) fifth.
			session persist: newCustomer! !

!methodRemoval: CustomerImporter #assertRecordIsNotEmpty stamp: 'JDR 6/26/2022 22:34:59'!
assertRecordIsNotEmpty

	(record size = 1) ifTrue: [self error: CustomerImporter invalidEmptyDataErrorDescription ]!
!CustomerImporter methodsFor: 'evaluating' stamp: 'JDR 6/26/2022 22:35:19'!
assertRecordIsNotEmpty

	^ (record isEmpty) ifTrue: [self error: CustomerImporter invalidEmptyDataErrorDescription ]! !
!CustomerImporter methodsFor: 'evaluating' stamp: 'JDR 6/26/2022 22:35:19' prior: 50520734!
importRecord

	self assertRecordIsNotEmpty.
	
	(self isCustomerRecord) ifTrue: [^self importCustomer].
	(self isAddressRecord) ifTrue: [^self importAddress].
	
	self error: CustomerImporter invalidIdentificationTypeErrorDescription.! !

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:35:25'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:35:25'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!

!testRun: #ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:35:26'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:36:00'!
test09EmptyRecordShouldNotLoad

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		  ] .! !

!methodRemoval: ImportTest #test09EmptyData stamp: 'JDR 6/26/2022 22:36:00'!
test09EmptyData

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		  ] .!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:36:31' prior: 50520816!
test09EmptyRecordShouldNotLoad

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertSessionHasNoCostumers 
		  ] .! !

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:36:33'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:36:33'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:36:33'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!

!testRun: #ImportTest #test09EmptyRecordShouldNotLoad stamp: 'JDR 6/26/2022 22:36:34'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:38:08' prior: 50520562!
test08AddressRecordMustBelongToACostumer

	self should: [CustomerImporter valueFrom: self addressWithoutCustomerData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter addressWithoutCustomerErrorDescription equals: anError messageText.
		self assertSessionHasNoCostumers ] .! !

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:38:08'!
PASSED!

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:38:09'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:38:09'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:38:10'!
PASSED!

!testRun: #ImportTest #test09EmptyRecordShouldNotLoad stamp: 'JDR 6/26/2022 22:38:11'!
PASSED!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:38:44' prior: 50519898!
test01ValidCustomersImportCorrectly

	CustomerImporter valueFrom: self validImportData into: session.

	self assertImportedRightNumberOfCustomers.
	self assertPepeSanchezWasImportedCorrecty.
	self assertJuanPerezWasImportedCorrectly ! !

!testRun: #ImportTest #test01ValidCustomersImportCorrectly stamp: 'JDR 6/26/2022 22:38:46'!
PASSED!

!testRun: #ImportTest #test02CustomerIdTypeMustBeC stamp: 'JDR 6/26/2022 22:38:46'!
PASSED!

!testRun: #ImportTest #test03AddressIdTypeMustBeA stamp: 'JDR 6/26/2022 22:38:46'!
PASSED!

!testRun: #ImportTest #test04CustomerRecordHasLessThanSixFields stamp: 'JDR 6/26/2022 22:38:46'!
PASSED!

!testRun: #ImportTest #test05CustomerRecordHasMoreThanFourFields stamp: 'JDR 6/26/2022 22:38:46'!
PASSED!

!testRun: #ImportTest #test06AddressRecordHasLessThanSevenFields stamp: 'JDR 6/26/2022 22:38:47'!
PASSED!

!testRun: #ImportTest #test07AddressRecordHasMoreThanFiveFields stamp: 'JDR 6/26/2022 22:38:47'!
PASSED!

!testRun: #ImportTest #test08AddressRecordMustBelongToACostumer stamp: 'JDR 6/26/2022 22:38:47'!
PASSED!

!testRun: #ImportTest #test09EmptyRecordShouldNotLoad stamp: 'JDR 6/26/2022 22:38:47'!
PASSED!
!ImportTest methodsFor: 'assertions' stamp: 'JDR 6/26/2022 22:46:16'!
assertNoCostumersImported

	^ self assert: 0 equals: (session selectAllOfType: Customer) size! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'JDR 6/26/2022 22:46:16' prior: 50520881!
test08AddressRecordMustBelongToACostumer

	self should: [CustomerImporter valueFrom: self addressWithoutCustomerData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter addressWithoutCustomerErrorDescription equals: anError messageText.
		self assertNoCostumersImported ] .! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'JDR 6/26/2022 22:46:16' prior: 50520642!
test02CustomerIdTypeMustBeC

	self should: [CustomerImporter valueFrom: self invalidIdentificationTypeData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		 self assert: CustomerImporter invalidIdentificationTypeErrorDescription equals: anError messageText.
		 self assertNoCostumersImported ] .! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'JDR 6/26/2022 22:46:16' prior: 50520628!
test05CustomerRecordHasMoreThanFourFields

	self should: [CustomerImporter valueFrom: self tooFewCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooFewFieldsInCustomerRecordErrorDescription equals: anError messageText .
		self assertNoCostumersImported] .! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'JDR 6/26/2022 22:46:17' prior: 50520839!
test09EmptyRecordShouldNotLoad

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .! !
!ImportTest methodsFor: 'as yet unclassified' stamp: 'JDR 6/26/2022 22:46:17' prior: 50520656!
test04CustomerRecordHasLessThanSixFields

	self should: [CustomerImporter valueFrom: self tooManyCostumerFieldsData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError | 
		self assert: CustomerImporter tooManyFieldsInCustomerRecordErrorDescription equals: anError messageText.
		self assertNoCostumersImported ] .! !

!methodRemoval: ImportTest #assertSessionHasNoCostumers stamp: 'JDR 6/26/2022 22:46:17'!
assertSessionHasNoCostumers

	^ self assert: 0 equals: (session selectAllOfType: Customer) size!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:49:01'!
test09EmptyRecordShouldImportAnything

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .! !

!methodRemoval: ImportTest #test09EmptyRecordShouldNotLoad stamp: 'JDR 6/26/2022 22:49:01'!
test09EmptyRecordShouldNotLoad

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:49:07'!
test09EmptyRecordShouldNotImportAnything

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .! !

!methodRemoval: ImportTest #test09EmptyRecordShouldImportAnything stamp: 'JDR 6/26/2022 22:49:07'!
test09EmptyRecordShouldImportAnything

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .!
!ImportTest methodsFor: 'tests' stamp: 'JDR 6/26/2022 22:49:22'!
test09EmptyRecordShouldNotImport

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .! !

!methodRemoval: ImportTest #test09EmptyRecordShouldNotImportAnything stamp: 'JDR 6/26/2022 22:49:22'!
test09EmptyRecordShouldNotImportAnything

	self should: [CustomerImporter valueFrom: self invalidEmptyData into: session] 
	raise: Error - MessageNotUnderstood 
	withExceptionDo:[:anError |
		self assert: CustomerImporter invalidEmptyDataErrorDescription equals: anError messageText.
		self assertNoCostumersImported 
		  ] .!

----QUIT----(26 June 2022 22:50:01) CuisUniversity-5301.image priorSource: 6002664!